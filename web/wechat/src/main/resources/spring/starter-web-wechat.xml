<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	default-autowire="byName">

	<!-- mvc request/response -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- resource for css/js/image, enable cache -->
	<mvc:resources mapping="/resources/**" location="/resources/" />


	<!-- json view resolver -->
	<bean id="jsonViewResolver" class="org.yaen.starter.web.home.views.JsonViewResolver">
		<property name="order" value="1" />
	</bean>

	<!-- default handler -->
	<mvc:default-servlet-handler />

	<!-- multi part resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为10MB -->
		<property name="maxUploadSize">
			<value>10485760</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

	<!-- interceptors in order -->
	<mvc:interceptors>
		<!-- session interceptor, may use different repository for sessions -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/resources/**" />
			<beans:bean id="sessionInterceptor" class="org.yaen.starter.web.home.interceptors.SessionInterceptor">
				<property name="sessionMaxInactiveIntervalInSeconds" value="${session.max.inactive.interval.in.seconds}" />
				<property name="cookieContext" ref="cookieContext" />
				<property name="sessionRepository" ref="sessionRepository" />
			</beans:bean>
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/resources/**" />
			<beans:bean id="weixinAuthInterceptor" class="org.yaen.starter.web.wechat.interceptors.StarterWechatInterceptor">
			</beans:bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- use cookie for session context -->
	<bean id="cookieContext" class="org.yaen.starter.web.home.contexts.CookieContext">
		<property name="cookieName" value="${session.cookie.name}" />
		<property name="cookieDomain" value="${session.cookie.domain}" />
		<property name="cookiePath" value="${session.cookie.path}" />
		<property name="cookieHttpOnly" value="${session.cookie.httponly}" />
		<property name="cookieSecure" value="${session.cookie.secure}" />
		<property name="cookieMaxAge" value="${session.cookie.maxage}" />
	</bean>

	<!-- session repository -->

	<!-- use this for local session -->
	<bean id="sessionRepository" class="org.springframework.session.MapSessionRepository" />

	<!-- use this for redis session -->
	<!--<bean id="sessionRepository" class="org.springframework.session.data.redis.RedisOperationsSessionRepository"> -->
	<!-- <constructor-arg index="0"> -->
	<!-- <bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> -->
	<!-- <constructor-arg index="0"> -->
	<!-- <bean class="redis.clients.jedis.JedisPoolConfig" /> -->
	<!-- </constructor-arg> -->
	<!-- <property name="hostName" value="${session.redis.host}" /> -->
	<!-- <property name="port" value="${session.redis.port}" /> -->
	<!-- </bean> -->
	<!-- </constructor-arg> -->
	<!--</bean> -->

</beans>